name: Release

on:
  pull_request:
    types: [closed]

jobs:
  build:
    name: Release plugin
    runs-on: ubuntu-latest
    if: startsWith( github.event.pull_request.title , 'release/' ) && github.event.pull_request.merged

    steps:
      - name: calculate release level
        id: level
        env:
          RELEASE_TITLE: ${{ github.event.pull_request.title }}
        run: |
          echo "::set-output name=value::$(echo ${RELEASE_TITLE} | cut -d '/' -f2)"
      - name: Checkout
        uses: actions/checkout@v2

      - name: current version
        uses: actions-ecosystem/action-get-latest-tag@v1
        id: current-version
        with:
          semver_only: true

      - name: "calculate next version (from: ${{ steps.current-version.outputs.tag }}, up: ${{ steps.level.outputs.value }})"
        id: next-version
        uses: actions-ecosystem/action-bump-semver@v1
        with:
          current_version: ${{ steps.current-version.outputs.tag }}
          level: ${{ steps.level.outputs.value }}

      - name: push tag
        uses: actions-ecosystem/action-push-tag@v1
        with:
          tag: ${{ steps.next-version.outputs.new_version }}
          message: "Release version ${{ steps.next-version.outputs.new_version }}"

      - name: Set up Java
        uses: actions/setup-java@v1.3.0
        with:
          java-version: '8'

      - name: Cache gradle
        id: gradle
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: gradle-${{ hashFiles('**/*.gradle') }}-${{ hashFiles('**/gradle-wrapper.properties') }}
          restore-keys: gradle-

      - name: Release to gradle plugin portal
        env:
          PROJECT_VERSION: ${{ steps.next-version.outputs.new_version }}
          GRADLE_PUBLISH_KEY: ${{ secrets.GRADLE_PUBLISH_KEY }}
          GRADLE_PUBLISH_SECRET: ${{ secrets.GRADLE_PUBLISH_SECRET }}
        run: |
          ./gradlew publishPlugins \
            -Pgradle.publish.key=$GRADLE_PUBLISH_KEY \
            -Pgradle.publish.secret=$GRADLE_PUBLISH_SECRET \
            -PpluginVersion=$PROJECT_VERSION
